{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","console","log","this","props","accountBalance","toFixed","getAccountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Credits","credits","map","credit","date","slice","amount","description","id","amt","elements","desc","length","today","Date","toISOString","split","addCreditClicked","Math","floor","random","Debits","debits","debit","addDebitClicked","App","logInInfo","newUser","currentUser","d","JSON","stringify","updatedState","concat","parseFloat","c","a","axios","get","resp","data","response","status","basename","exact","path","render","totalDebits","addCredit","bind","addDebit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f114ad0.chunk.js","sourcesContent":["// src/components/AccountBalance.js\n\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  getAccountBalance() {\n    console.log(\"AccountBalance accountBalance: \" + this.props.accountBalance);\n    return this.props.accountBalance.toFixed(2);\n  }\n\n  render() {\n    return (\n      <div>\n        Balance: {this.getAccountBalance()}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;\n","// src/components/Home.js\n// The Home component is used to demonstrate the use of Link.\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// src/components/UserProfile.js\n// The UserProfile component is used to demonstrate the use of Route and Link.\n\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","// src/components/Login.js\n// The LogIn component is used to demonstrate the use of Redirect.\n\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nclass LogIn extends Component {\n  constructor () {  // Create and initialize state\n    super()\n    this.state = {\n      user: {\n        userName: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n\n  // When the user name input is changed, capture the input and update the state (user.userName)\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}\n    const inputField = e.target.name\n    const inputValue = e.target.value\n    updatedUser[inputField] = inputValue\n\n    this.setState({user: updatedUser})\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)\n    this.setState({redirect: true})\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {\n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"userName\">User Name</label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>                  \n      </div>\n    )\n  }\n}\n\nexport default LogIn\n","// src/components/Credits.js\n//\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Credits = (props) => {\n\n  //console.log(\"props.Credits in Credits: \" + props.credits.length);\n  //console.log(\"props.accountBalance (\" + typeof(props.accountBalance) + \") in Credits: \" + props.accountBalance);\n\n  const submitHandler = (e) => {\n    e.preventDefault(); // ?\n    var amt = e.target.elements.amount.value;\n    var desc = e.target.elements.description.value;\n    console.log(\"+++ Amount: \" + amt);\n    console.log(\"+++ Description: \" + desc);\n    console.log(\"+++ Credits length before: \" + props.credits.length);\n    console.log(\"+++ accountBalance before: \" + props.accountBalance);\n\n    //App.addCredit({\"description\":desc, \"amount\":amt});\n\n    const today = new Date().toISOString().split('T')[0];\n    //console.log(\"Today is : \" + today);\n    props.addCreditClicked({id: Math.floor(Math.random() * 10000), \"description\":desc, \"amount\":amt, \"date\":today});\n    //setTotalCredits(80);\n    console.log(\"Credits length after: \" + props.credits.length);\n    console.log(\"accountBalance after: \" + props.accountBalance);\n\n  };\n\n  // Create the list of Credit items\n  let creditsView = () => {\n    //const { credits } = props.credits;\n    //return <h1>poopy {props.keys()} now</h1>;\n\n    return props.credits.map((credit) => {\n      let date = credit.date.slice(0,10);\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n    })\n\n  };\n  // Render the list of Credit items and a form to input new Credit item\n  return (\n    <div>\n      <h1>Credits</h1>\n\n      {creditsView()}\n\n      <form onSubmit={submitHandler} >\n        <label>Description</label>\n        <input type=\"text\" name=\"description\" />\n        <label>Amount</label>\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Credit</button>\n      </form>\n\n      <AccountBalance accountBalance={props.accountBalance}/>\n\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n\n  )\n\n};\n\nexport default Credits;\n","// src/components/Debits.js\n//\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Debits = (props) => {\n\n  console.log(\"props.Debits in Debits: \" + props.debits.length);\n  console.log(\"props.accountBalance in Debits: \" + props.accountBalance);\n\n  const submitHandler = (e) => {\n    e.preventDefault(); // ?\n    var amt = e.target.elements.amount.value;\n    var desc = e.target.elements.description.value;\n    console.log(\"+++ Amount: \" + amt);\n    console.log(\"+++ Description: \" + desc);\n    console.log(\"+++ Debits length before: \" + props.debits.length);\n    console.log(\"+++ accountBalance before: \" + props.accountBalance);\n\n    //App.addDebit({\"description\":desc, \"amount\":amt});\n\n    const today = new Date().toISOString().split('T')[0];\n    //console.log(\"Today is : \" + today);\n    props.addDebitClicked({id: Math.floor(Math.random() * 10000), \"description\":desc, \"amount\":amt, \"date\":today});\n    //setTotalDebits(80);\n    console.log(\"Debits length after: \" + props.debits.length);\n    console.log(\"accountBalance after: \" + props.accountBalance);\n\n  };\n\n  // Create the list of Debit items\n  let debitsView = () => {\n    //const { debits } = props.debits;\n    //return <h1>poopy {props.keys()} now</h1>;\n\n    return props.debits.map((debit) => {\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    })\n\n  };\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={submitHandler} >\n        <label>Description</label>\n        <input type=\"text\" name=\"description\" />\n        <label>Amount</label>\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n\n      <AccountBalance accountBalance={props.accountBalance}/>\n\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n\n  )\n\n};\n\nexport default Debits;\n","// src/App.js\n\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport axios from 'axios';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super();\n    this.state = {\n      accountBalance: 0,\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      },\n      credits: [],\n      debits: []\n    };\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  addDebit(d) {\n    console.log(\"Subtracting \" + JSON.stringify(d))\n    const updatedState = {...this.state, debits: this.state.debits.concat(d)};\n    updatedState.accountBalance = updatedState.accountBalance - parseFloat(d.amount)\n    this.setState(updatedState);\n  }\n\n  addCredit(c) {\n    console.log(\"Adding \" + parseFloat(c.amount))\n    console.log(\" ---- to \" + JSON.stringify(this.state.accountBalance))\n    const updatedState = {...this.state, credits: this.state.credits.concat(c)};\n    updatedState.accountBalance = updatedState.accountBalance + parseFloat(c.amount)\n    this.setState(updatedState);\n  }\n\n  async componentDidMount() {\n    // Get Credits\n    if (this.state.debits.length === 0) {\n      let linkToDebitsAPI = 'https://moj-api.herokuapp.com/debits';\n      try {\n        let resp = await axios.get(linkToDebitsAPI);\n        // console.log(\"Resp Debits: \" + resp);\n        this.setState({debits: resp.data});\n        // console.log(\"DEBITS: \" + this.state.debits);\n      }\n      catch (error) {\n        if (error.response) {\n          // console.log(error.response.data);\n          // console.log(error.response.status);\n        }\n      }\n    }\n    if (this.state.credits.length === 0) {\n      let linkToCreditAPI = 'https://moj-api.herokuapp.com/credits';\n      try {\n        let resp = await axios.get(linkToCreditAPI);\n        console.log(\"Resp Credits: \" + resp);\n        this.setState({credits: resp.data});\n        console.log(\"CREDITS: \" + this.state.credits);\n      }\n      catch (error) {\n        if (error.response) {\n          console.log(error.response.data);\n          console.log(error.response.status);\n        }\n      }\n    }\n\n    console.log(\"AccountBalance before adding debits: \" + this.state.accountBalance);\n    for (const debit of this.state.debits) {\n      console.log(\"Subtracting \" + parseFloat(debit.amount) + \" from \" + this.state.accountBalance);\n      const updatedState = {...this.state}\n      updatedState.accountBalance = updatedState.accountBalance - parseFloat(debit.amount)\n      this.setState(updatedState);\n    }\n    console.log(\"AccountBalance AFTER adding debits: \" + this.state.accountBalance);\n\n    for (const credit of this.state.credits) {\n      console.log(\"Adding \" + parseFloat(credit.amount) + \" to \" + this.state.accountBalance);\n      const updatedState = {...this.state}\n      updatedState.accountBalance = updatedState.accountBalance + parseFloat(credit.amount)\n      this.setState(updatedState);\n    }\n    console.log(\"accountBalance: \" + this.state.accountBalance);\n\n  }\n\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements\n    const HomeComponent = () => (<Home totalDebits={this.state.totalDebits} accountBalance={this.state.accountBalance} />);\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}  />\n    );\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)  // Pass props to \"LogIn\" component\n    const DebitsComponent = () => (<Debits addDebitClicked={this.addDebit.bind(this)} debits={this.state.debits} accountBalance={this.state.accountBalance} />)  // Pass props to \"Debits\" component\n    const CreditsComponent = () => (<Credits addCreditClicked={this.addCredit.bind(this)} credits={this.state.credits} accountBalance={this.state.accountBalance} />)  // Pass props to \"Credits\" component\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/react-gh-pages\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}